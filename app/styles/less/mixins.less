.backface-visibility {
	-webkit-backface-visibility: hidden;
	   -moz-backface-visibility: hidden;
	    -ms-backface-visibility: hidden;
	     -o-backface-visibility: hidden;
	        backface-visibility: hidden;
}

.gradient(@startColor: #FFFFFF, @endColor: #000000) {
	content:'';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0px;
    left: 0px;
    opacity: 0.6;
    background-color: @startColor;
    background-size : 100%;
    background: @startColor;
    background: -moz-linear-gradient(top, @startColor 0%, @endColor 100%);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, @startColor), color-stop(100%, @endColor));
    background: -webkit-linear-gradient(top, @startColor 0%, @endColor 100%);
    background: -o-linear-gradient(top, @startColor 0%, @endColor 100%);
    background: -ms-linear-gradient(top, @startColor 0%, @endColor 100%);
    background: linear-gradient(to bottom, @startColor 0%, @endColor 100%);
}

.orange-gradient:after {
	.gradient(rgba(255, 102, 0, 1), rgba(0, 0, 0, 0.6)); 
}

.orange-gradient:hover:after {
	.gradient(rgba(248, 146, 30, 0.5), rgba(0, 0, 0, 0.6)); 
}

.reset-list {
	list-style-type: none;
	margin: 0;
	padding: 0;
}

.scale3d(@xValue: 0, @yValue: 0, @zValue: 0) {
	 -webkit-transform: scale3d(@xValue, @yValue, @zValue);
        -moz-transform: scale3d(@xValue, @yValue, @zValue);
         -ms-transform: scale3d(@xValue, @yValue, @zValue);
          -o-transform: scale3d(@xValue, @yValue, @zValue);
             transform: scale3d(@xValue, @yValue, @zValue);
}

.transition(@prop: all, @time: 0.6s, @animation: ease-in-out) {
    -webkit-transition: @prop @time @animation;
       -moz-transition: @prop @time @animation;
         -o-transition: @prop @time @animation;
            transition: @prop @time @animation;
}

.translate3d(@xValue: 0, @yValue: 0, @zValue: 0) {
	-webkit-transform: translate3d(@xValue, @yValue, @zValue);
       -moz-transform: translate3d(@xValue, @yValue, @zValue);
        -ms-transform: translate3d(@xValue, @yValue, @zValue);
         -o-transform: translate3d(@xValue, @yValue, @zValue);
            transform: translate3d(@xValue, @yValue, @zValue);
}
